using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.IO;
using System.Data.Entity.SqlServer;

namespace QUANLYTIEC.Models.BUS
{
    public class DA_Party : EfRepositoryBase<TBL_PARTY>
    {
        #region para
        private static volatile DA_Party _instance;
        private static readonly object SyncRoot = new Object();
        #endregion

        #region Constructor
        public static DA_Party Instance
        {
            get
            {
                if (_instance == null)
                {
                    lock (SyncRoot)
                    {
                        if (_instance == null)
                            _instance = new DA_Party();
                    }
                }
                return _instance;
            }
        }
        #endregion

        #region method
        /// <summary>
        /// method get entity base ranger party date
        /// </summary>
        /// <param name="PartyDateFrom">party date start</param>
        /// <param name="PartyDateTo">party date finish</param>
        /// <returns></returns>
        public List<Object> GetEntityBasePartyDate(DateTime PartyDateFrom, DateTime PartyDateTo)
        {
            try
            {
                using (var context = (ConnectionEFDataFirst)Activator.CreateInstance(typeof(ConnectionEFDataFirst), _connectionStr))
                {
                    List<Object> result = new List<Object>();
                    result = (from u in context.TBL_PARTY
                              where u.PartyDate >= PartyDateFrom && u.PartyDate <= PartyDateTo
                              select new { u.PartyID, u.CustomerName, u.PartyAddress, PartyDate = SqlFunctions.DateName("day", u.PartyDate) + "/" + SqlFunctions.DateName("month", u.PartyDate) + "/" + SqlFunctions.DateName("year", u.PartyDate) + " " + SqlFunctions.DateName("hour", u.PartyDate) + ":" + SqlFunctions.DateName("minute", u.PartyDate) }).ToList<Object>();
                    return result;
                }
            }
            catch (Exception ex) { return null; }
        }
        #endregion
    }
}