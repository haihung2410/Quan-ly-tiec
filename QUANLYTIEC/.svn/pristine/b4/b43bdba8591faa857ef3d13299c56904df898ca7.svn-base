using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using QUANLYTIEC.Models;
using QUANLYTIEC.Models.BUS;

namespace QUANLYTIEC.Controllers
{
    public class FoodController : BaseController
    {

        #region method is used for load page
        public ActionResult Index()
        {
            if (!CheckPermission())
                return RedirectToAction("Index", "Login");
            ViewBag.title = TitleEnum.getTitleForPage(typeof(TBL_PRODUCT).Name, "index");
            return View();
        }
        public ActionResult Edit(string id)
        {
            if (!CheckPermission())
                return RedirectToAction("Index", "Login");
            ViewBag.title = TitleEnum.getTitleForPage(typeof(TBL_PRODUCT).Name, "edit");
            if (!string.IsNullOrWhiteSpace(id) && id.All(Char.IsDigit))
            {
                ViewBag.comBoBoxNVL = DA_Material.Instance.GetAll().ToList();
                ViewBag.comBoBoxDVT = DA_UOM.Instance.GetAll().ToList();
                ViewBag.combobox = DA_GroupFood.Instance.getAllEntityNoChild();
                ViewBag.productMaterial = DA_Product_Material.Instance.getEntityBaseIdProduct(Convert.ToInt32(id));
                return View(DA_Food.Instance.GetById(Convert.ToInt32(id)));
            }
            return RedirectToAction("Index", "GroupFood");
        }
        public ActionResult Create()
        {
            if (!CheckPermission())
                return RedirectToAction("Index", "Login");
            ViewBag.title = TitleEnum.getTitleForPage(typeof(TBL_PRODUCT).Name, "create");
            ViewBag.comBoBoxNVL = DA_Material.Instance.GetAll().ToList();
            ViewBag.comBoBoxDVT = DA_UOM.Instance.GetAll().ToList();
            ViewBag.combobox = DA_GroupFood.Instance.getAllEntityNoChild();
            return View();
        }
        #endregion

        #region method is used for ajax
        /// <summary>
        /// ajax for datatable
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public JsonResult GetFoodDatatableIndex()
        {
            try
            {
                #region get para from view
                //jQuery DataTables Param
                var draw = Request.Form.GetValues("draw").FirstOrDefault();
                //Find paging info
                var start = Request.Form.GetValues("start").FirstOrDefault();
                var length = Request.Form.GetValues("length").FirstOrDefault();
                int orderColumn = Convert.ToInt32(Request.Form.GetValues("order[0][column]").FirstOrDefault());
                //Find order columns info
                var sortColumn = Request.Form.GetValues("columns[" + (orderColumn) + "][name]").FirstOrDefault();
                var sortColumnDir = Request.Form.GetValues("order[0][dir]").FirstOrDefault();
                //find search columns info
                var search = Request.Form["search[value]"];
                //page
                int pageSize = length != null ? Convert.ToInt32(length) : 0;
                int skip = start != null ? Convert.ToInt16(start) : 0;
                #endregion

                long recordsTotal = 0;

                List<object> data = DA_Food.Instance.getFoodForDatatablePagging(search.ToString(), skip, length != null ? Convert.ToInt32(length) : 0, sortColumn, sortColumnDir);
                recordsTotal = DA_Food.Instance.countAllFoodFlowSearch(search.ToString());
                return Json(new { draw = draw, recordsFiltered = recordsTotal, recordsTotal = recordsTotal, data = data }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(null);
            }
        }
        /// <summary>
        /// ajax delete item
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public JsonResult delete()
        {
            try
            {
                //jQuery DataTables Param
                string id = (Request.Form.GetValues("id").FirstOrDefault() == null
                    ? ""
                    : Request.Form.GetValues("id").FirstOrDefault().ToString());
                if (id.All(Char.IsDigit))
                {
                    int ID = Convert.ToInt32(id);
                    if (DA_Food.Instance.Delete(DA_Food.Instance.GetById(ID)) <= 0)
                        return Json(0);
                    List<TBL_PRODUCT_MATERIAL> lsPA = DA_Product_Material.Instance.getEntityBaseIdProduct(ID);
                    if (lsPA.Count>0)
                    {
                        foreach(TBL_PRODUCT_MATERIAL item in lsPA)
                            DA_Product_Material.Instance.Delete(item);
                    }
                    return Json(1);
                }
            }catch (Exception ex){}
            return Json(0);
        }
        #endregion

        #region method is used for sumbit form
        /// <summary>
        /// method excute save item when sumbit form create
        /// </summary>
        /// <param name="groupName"></param>
        /// <param name="parentName"></param>
        /// <returns></returns>
        [HttpPost]
        public JsonResult Create(TBL_PRODUCT product, List<TBL_PRODUCT_MATERIAL> productDetail)
        {
            return Json((forActionEditAndCreateEntity(product, productDetail)) ? 1 : 0);
        }
        /// <summary>
        /// method excute save item when sumbit form edit
        /// </summary>
        /// <param name="serviceID"></param>
        /// <param name="serviceName"></param>
        /// <param name="unitPrice"></param>
        /// <param name="notes"></param>
        /// <param name="isActive"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult Edit(TBL_PRODUCT product, List<TBL_PRODUCT_MATERIAL> productDetail)
        {
            return Json((forActionEditAndCreateEntity(product, productDetail)) ? 1 : 0);
        }
        #endregion

        private bool forActionEditAndCreateEntity(TBL_PRODUCT product, List<TBL_PRODUCT_MATERIAL> productDetail)
        {
            try
            {
                if (!string.IsNullOrWhiteSpace(product.ProductName))
                {
                    //insert table TBL_PRODUCT
                    if (product.ProductID > 0)
                        DA_Food.Instance.Update(product);
                    else
                        DA_Food.Instance.Insert(product);

                    //insert table TBL_PRODUCT_MATERIAL
                    List<TBL_PRODUCT_MATERIAL> lsInsert = new List<TBL_PRODUCT_MATERIAL>();
                    List<TBL_PRODUCT_MATERIAL> lsUpdate = new List<TBL_PRODUCT_MATERIAL>();
                    foreach (TBL_PRODUCT_MATERIAL item in productDetail)
                    {
                        if (item.MaterialID != 0)
                        {
                            item.ProductID = product.ProductID;
                            if (item.ProductMaterialID == 0)
                                lsInsert.Add(item);
                            else
                                lsUpdate.Add(item);
                        }
                    }
                    DA_Product_Material.Instance.Update(lsUpdate);
                    DA_Product_Material.Instance.Insert(lsInsert);
                    return true;
                }
            }
            catch(Exception ex)
            {
                
            }
            return false;
        }
    }
}